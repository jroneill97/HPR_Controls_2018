clc; clear all; close all;

% Define parameters used throughout the simulation
global rho g
load('rocket_parameters.mat');
rho = 1.225;
g   = -9.8;

% position     - 1:4 - x y z
% velocity     - 5:8 - u v w
% ang position - 9:11 - roll pitch yaw
% ang velocity - 12:14

t = t0;               % initialize t 
states = zeros(1,14); % initialize state matrix

% Define initial states
states(7)  = 50;

% Define time span and resolution
t0 = 0;
tf = 10;

nsteps   = 500; % Number of steps between t0 and tf
stepSize = 1/nsteps;
tspan    = t0:stepSize:tf; % Time span created from defined step size

nip      = 100; % Number of integration points

options = odeset('JConstant','on', 'RelTol',1e-6, 'AbsTol',1e-6);
for i = 1:nsteps  
    t1 = tf*(i-1)/nsteps;
    t2 = tf*i/nsteps;
    tspan = t1:(t2-t1)/nip:t2;
    
    [t_new,statesNew] = ode45('updated_rocket_equations_of_motion',...
                               tspan,states,options);
                           
    t(i+1) = t2;
    states = statesNew(nip+1,1:14)';
    
    disp((i*100)/nsteps); % display percent completion
end

% Animate the resulting state array
ax = axes('XLim',[0 10],'YLim',[-11 11],'ZLim',[0 122]);

animateRocket(t,states,ax,rocketParameters);